# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: annotation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='annotation.proto',
  package='annotation',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x61nnotation.proto\x12\nannotation\x1a\x19google/protobuf/any.proto\"P\n\x1a\x42\x61tchAnnotateImagesRequest\x12\x32\n\x08requests\x18\x01 \x03(\x0b\x32 .annotation.AnnotateImageRequest\"d\n\x14\x41nnotateImageRequest\x12 \n\x05image\x18\x01 \x01(\x0b\x32\x11.annotation.Image\x12*\n\x08\x66\x65\x61tures\x18\x02 \x03(\x0b\x32\x18.annotation.ImageFeature\"A\n\x05Image\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12\'\n\x06source\x18\x02 \x01(\x0b\x32\x17.annotation.ImageSource\" \n\x0bImageSource\x12\x11\n\timage_url\x18\x01 \x01(\t\"\x91\x02\n\x0cImageFeature\x12+\n\x04type\x18\x01 \x01(\x0e\x32\x1d.annotation.ImageFeature.Type\x12\x13\n\x0bmax_results\x18\x02 \x01(\x05\"\xbe\x01\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x12\n\x0e\x46\x45\x41TURE_VECTOR\x10\x01\x12\x12\n\x0eITEM_DETECTION\x10\x02\x12\x17\n\x13\x43\x41TEGORY_PREDICTION\x10\x03\x12\x13\n\x0f\x43OLOR_DETECTION\x10\x04\x12\x19\n\x15IS_FASHION_PREDICTION\x10\x05\x12\x17\n\x13HAS_FACE_PREDICTION\x10\x06\x12\x16\n\x12TEXTURE_PREDICTION\x10\x07\"S\n\x1b\x42\x61tchAnnotateImagesResponse\x12\x34\n\tresponses\x18\x01 \x03(\x0b\x32!.annotation.AnnotateImageResponse\"\xd6\x03\n\x15\x41nnotateImageResponse\x12\x36\n\x0e\x66\x65\x61ture_vector\x18\x01 \x01(\x0b\x32\x1e.annotation.ImageFeatureVector\x12\x34\n\x10item_annotations\x18\x02 \x03(\x0b\x32\x1a.annotation.ItemAnnotation\x12<\n\x14\x63\x61tegory_annotations\x18\x03 \x03(\x0b\x32\x1e.annotation.CategoryAnnotation\x12\x36\n\x11\x63olor_annotations\x18\x04 \x03(\x0b\x32\x1b.annotation.ColorAnnotation\x12>\n\x15is_fashion_annotation\x18\x05 \x01(\x0b\x32\x1f.annotation.IsFashionAnnotation\x12:\n\x13has_face_annotation\x18\x06 \x01(\x0b\x32\x1d.annotation.HasFaceAnnotation\x12:\n\x13texture_annotations\x18\x07 \x03(\x0b\x32\x1d.annotation.TextureAnnotation\x12!\n\x05\x65rror\x18\x08 \x01(\x0b\x32\x12.annotation.Status\"$\n\x12ImageFeatureVector\x12\x0e\n\x06vector\x18\x01 \x03(\x02\"Z\n\x0eItemAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12%\n\x04\x62\x62ox\x18\x02 \x01(\x0b\x32\x17.annotation.BoundingBox\x12\x12\n\nconfidence\x18\x03 \x01(\x02\"7\n\x12\x43\x61tegoryAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"0\n\x0f\x43olorAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12\x0e\n\x06\x63\x65nter\x18\x02 \x03(\x02\"8\n\x13IsFashionAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"6\n\x11HasFaceAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"6\n\x11TextureAnnotation\x12\r\n\x05label\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"I\n\x0b\x42oundingBox\x12\r\n\x05x_min\x18\x01 \x01(\x05\x12\r\n\x05y_min\x18\x02 \x01(\x05\x12\r\n\x05x_max\x18\x03 \x01(\x05\x12\r\n\x05y_max\x18\x04 \x01(\x05\"N\n\x19\x42\x61tchAnnotateTextsRequest\x12\x31\n\x08requests\x18\x01 \x03(\x0b\x32\x1f.annotation.AnnotateTextRequest\"N\n\x13\x41nnotateTextRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12)\n\x08\x66\x65\x61tures\x18\x02 \x03(\x0b\x32\x17.annotation.TextFeature\"\xb4\x01\n\x0bTextFeature\x12*\n\x04type\x18\x01 \x01(\x0e\x32\x1c.annotation.TextFeature.Type\x12\x13\n\x0bmax_results\x18\x02 \x01(\x05\"d\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x15\n\x11\x45NTITY_PREDICTION\x10\x01\x12\x14\n\x10\x45NTITY_RELATIONS\x10\x02\x12\x19\n\x15PRICE_RANGE_DETECTION\x10\x03\"Q\n\x1a\x42\x61tchAnnotateTextsResponse\x12\x33\n\tresponses\x18\x01 \x03(\x0b\x32 .annotation.AnnotateTextResponse\"\xb5\x01\n\x14\x41nnotateTextResponse\x12\x38\n\x12\x65ntity_annotations\x18\x01 \x03(\x0b\x32\x1c.annotation.EntityAnnotation\x12@\n\x16price_range_annotation\x18\x02 \x01(\x0b\x32 .annotation.PriceRangeAnnotation\x12!\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x12.annotation.Status\"\xab\x01\n\x10\x45ntityAnnotation\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0b\n\x03\x63ls\x18\x02 \x01(\t\x12\r\n\x05label\x18\x03 \x01(\t\x12\r\n\x05start\x18\x04 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x05 \x01(\x05\x12\x10\n\x08original\x18\x06 \x01(\t\x12\x12\n\nconfidence\x18\x07 \x01(\x02\x12-\n\trelations\x18\x08 \x03(\x0b\x32\x1a.annotation.EntityRelation\"`\n\x14PriceRangeAnnotation\x12\x10\n\x08\x63urrency\x18\x01 \x01(\t\x12\x36\n\x11range_annotations\x18\x02 \x03(\x0b\x32\x1b.annotation.RangeAnnotation\"\x9c\x01\n\x0fRangeAnnotation\x12;\n\x08operator\x18\x01 \x01(\x0e\x32).annotation.RangeAnnotation.RangeOperator\x12\r\n\x05value\x18\x02 \x01(\x05\"=\n\rRangeOperator\x12\x12\n\x0eOP_UNSPECIFIED\x10\x00\x12\x07\n\x03GTE\x10\x01\x12\x07\n\x03LTE\x10\x02\x12\x06\n\x02\x45Q\x10\x03\".\n\x0e\x45ntityRelation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06target\x18\x02 \x01(\t\"N\n\x06Status\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\x12%\n\x07\x64\x65tails\x18\x03 \x03(\x0b\x32\x14.google.protobuf.Any2\xdc\x01\n\tAnnotator\x12\x65\n\x12\x42\x61tchAnnotateTexts\x12%.annotation.BatchAnnotateTextsRequest\x1a&.annotation.BatchAnnotateTextsResponse\"\x00\x12h\n\x13\x42\x61tchAnnotateImages\x12&.annotation.BatchAnnotateImagesRequest\x1a\'.annotation.BatchAnnotateImagesResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,])



_IMAGEFEATURE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='annotation.ImageFeature.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FEATURE_VECTOR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ITEM_DETECTION', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CATEGORY_PREDICTION', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLOR_DETECTION', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_FASHION_PREDICTION', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HAS_FACE_PREDICTION', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEXTURE_PREDICTION', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=428,
  serialized_end=618,
)
_sym_db.RegisterEnumDescriptor(_IMAGEFEATURE_TYPE)

_TEXTFEATURE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='annotation.TextFeature.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTITY_PREDICTION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTITY_RELATIONS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRICE_RANGE_DETECTION', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1901,
  serialized_end=2001,
)
_sym_db.RegisterEnumDescriptor(_TEXTFEATURE_TYPE)

_RANGEANNOTATION_RANGEOPERATOR = _descriptor.EnumDescriptor(
  name='RangeOperator',
  full_name='annotation.RangeAnnotation.RangeOperator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OP_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GTE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LTE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EQ', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2638,
  serialized_end=2699,
)
_sym_db.RegisterEnumDescriptor(_RANGEANNOTATION_RANGEOPERATOR)


_BATCHANNOTATEIMAGESREQUEST = _descriptor.Descriptor(
  name='BatchAnnotateImagesRequest',
  full_name='annotation.BatchAnnotateImagesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requests', full_name='annotation.BatchAnnotateImagesRequest.requests', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=139,
)


_ANNOTATEIMAGEREQUEST = _descriptor.Descriptor(
  name='AnnotateImageRequest',
  full_name='annotation.AnnotateImageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='annotation.AnnotateImageRequest.image', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='features', full_name='annotation.AnnotateImageRequest.features', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=141,
  serialized_end=241,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='annotation.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='annotation.Image.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='source', full_name='annotation.Image.source', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=243,
  serialized_end=308,
)


_IMAGESOURCE = _descriptor.Descriptor(
  name='ImageSource',
  full_name='annotation.ImageSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_url', full_name='annotation.ImageSource.image_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=342,
)


_IMAGEFEATURE = _descriptor.Descriptor(
  name='ImageFeature',
  full_name='annotation.ImageFeature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='annotation.ImageFeature.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_results', full_name='annotation.ImageFeature.max_results', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _IMAGEFEATURE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=345,
  serialized_end=618,
)


_BATCHANNOTATEIMAGESRESPONSE = _descriptor.Descriptor(
  name='BatchAnnotateImagesResponse',
  full_name='annotation.BatchAnnotateImagesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='responses', full_name='annotation.BatchAnnotateImagesResponse.responses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=620,
  serialized_end=703,
)


_ANNOTATEIMAGERESPONSE = _descriptor.Descriptor(
  name='AnnotateImageResponse',
  full_name='annotation.AnnotateImageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature_vector', full_name='annotation.AnnotateImageResponse.feature_vector', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='item_annotations', full_name='annotation.AnnotateImageResponse.item_annotations', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='category_annotations', full_name='annotation.AnnotateImageResponse.category_annotations', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='color_annotations', full_name='annotation.AnnotateImageResponse.color_annotations', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_fashion_annotation', full_name='annotation.AnnotateImageResponse.is_fashion_annotation', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_face_annotation', full_name='annotation.AnnotateImageResponse.has_face_annotation', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='texture_annotations', full_name='annotation.AnnotateImageResponse.texture_annotations', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='annotation.AnnotateImageResponse.error', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=706,
  serialized_end=1176,
)


_IMAGEFEATUREVECTOR = _descriptor.Descriptor(
  name='ImageFeatureVector',
  full_name='annotation.ImageFeatureVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vector', full_name='annotation.ImageFeatureVector.vector', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1178,
  serialized_end=1214,
)


_ITEMANNOTATION = _descriptor.Descriptor(
  name='ItemAnnotation',
  full_name='annotation.ItemAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.ItemAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bbox', full_name='annotation.ItemAnnotation.bbox', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.ItemAnnotation.confidence', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1216,
  serialized_end=1306,
)


_CATEGORYANNOTATION = _descriptor.Descriptor(
  name='CategoryAnnotation',
  full_name='annotation.CategoryAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.CategoryAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.CategoryAnnotation.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1308,
  serialized_end=1363,
)


_COLORANNOTATION = _descriptor.Descriptor(
  name='ColorAnnotation',
  full_name='annotation.ColorAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.ColorAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='center', full_name='annotation.ColorAnnotation.center', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1365,
  serialized_end=1413,
)


_ISFASHIONANNOTATION = _descriptor.Descriptor(
  name='IsFashionAnnotation',
  full_name='annotation.IsFashionAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.IsFashionAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.IsFashionAnnotation.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1415,
  serialized_end=1471,
)


_HASFACEANNOTATION = _descriptor.Descriptor(
  name='HasFaceAnnotation',
  full_name='annotation.HasFaceAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.HasFaceAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.HasFaceAnnotation.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1473,
  serialized_end=1527,
)


_TEXTUREANNOTATION = _descriptor.Descriptor(
  name='TextureAnnotation',
  full_name='annotation.TextureAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.TextureAnnotation.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.TextureAnnotation.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1529,
  serialized_end=1583,
)


_BOUNDINGBOX = _descriptor.Descriptor(
  name='BoundingBox',
  full_name='annotation.BoundingBox',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x_min', full_name='annotation.BoundingBox.x_min', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y_min', full_name='annotation.BoundingBox.y_min', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x_max', full_name='annotation.BoundingBox.x_max', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y_max', full_name='annotation.BoundingBox.y_max', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1585,
  serialized_end=1658,
)


_BATCHANNOTATETEXTSREQUEST = _descriptor.Descriptor(
  name='BatchAnnotateTextsRequest',
  full_name='annotation.BatchAnnotateTextsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requests', full_name='annotation.BatchAnnotateTextsRequest.requests', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1660,
  serialized_end=1738,
)


_ANNOTATETEXTREQUEST = _descriptor.Descriptor(
  name='AnnotateTextRequest',
  full_name='annotation.AnnotateTextRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='annotation.AnnotateTextRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='features', full_name='annotation.AnnotateTextRequest.features', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1740,
  serialized_end=1818,
)


_TEXTFEATURE = _descriptor.Descriptor(
  name='TextFeature',
  full_name='annotation.TextFeature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='annotation.TextFeature.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_results', full_name='annotation.TextFeature.max_results', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TEXTFEATURE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1821,
  serialized_end=2001,
)


_BATCHANNOTATETEXTSRESPONSE = _descriptor.Descriptor(
  name='BatchAnnotateTextsResponse',
  full_name='annotation.BatchAnnotateTextsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='responses', full_name='annotation.BatchAnnotateTextsResponse.responses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2003,
  serialized_end=2084,
)


_ANNOTATETEXTRESPONSE = _descriptor.Descriptor(
  name='AnnotateTextResponse',
  full_name='annotation.AnnotateTextResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entity_annotations', full_name='annotation.AnnotateTextResponse.entity_annotations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='price_range_annotation', full_name='annotation.AnnotateTextResponse.price_range_annotation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='annotation.AnnotateTextResponse.error', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2087,
  serialized_end=2268,
)


_ENTITYANNOTATION = _descriptor.Descriptor(
  name='EntityAnnotation',
  full_name='annotation.EntityAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='annotation.EntityAnnotation.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cls', full_name='annotation.EntityAnnotation.cls', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='annotation.EntityAnnotation.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='annotation.EntityAnnotation.start', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='annotation.EntityAnnotation.end', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='original', full_name='annotation.EntityAnnotation.original', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='annotation.EntityAnnotation.confidence', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='relations', full_name='annotation.EntityAnnotation.relations', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2271,
  serialized_end=2442,
)


_PRICERANGEANNOTATION = _descriptor.Descriptor(
  name='PriceRangeAnnotation',
  full_name='annotation.PriceRangeAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currency', full_name='annotation.PriceRangeAnnotation.currency', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range_annotations', full_name='annotation.PriceRangeAnnotation.range_annotations', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2444,
  serialized_end=2540,
)


_RANGEANNOTATION = _descriptor.Descriptor(
  name='RangeAnnotation',
  full_name='annotation.RangeAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operator', full_name='annotation.RangeAnnotation.operator', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='annotation.RangeAnnotation.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _RANGEANNOTATION_RANGEOPERATOR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2543,
  serialized_end=2699,
)


_ENTITYRELATION = _descriptor.Descriptor(
  name='EntityRelation',
  full_name='annotation.EntityRelation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='annotation.EntityRelation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='annotation.EntityRelation.target', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2701,
  serialized_end=2747,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='annotation.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='annotation.Status.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='annotation.Status.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='details', full_name='annotation.Status.details', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2749,
  serialized_end=2827,
)

_BATCHANNOTATEIMAGESREQUEST.fields_by_name['requests'].message_type = _ANNOTATEIMAGEREQUEST
_ANNOTATEIMAGEREQUEST.fields_by_name['image'].message_type = _IMAGE
_ANNOTATEIMAGEREQUEST.fields_by_name['features'].message_type = _IMAGEFEATURE
_IMAGE.fields_by_name['source'].message_type = _IMAGESOURCE
_IMAGEFEATURE.fields_by_name['type'].enum_type = _IMAGEFEATURE_TYPE
_IMAGEFEATURE_TYPE.containing_type = _IMAGEFEATURE
_BATCHANNOTATEIMAGESRESPONSE.fields_by_name['responses'].message_type = _ANNOTATEIMAGERESPONSE
_ANNOTATEIMAGERESPONSE.fields_by_name['feature_vector'].message_type = _IMAGEFEATUREVECTOR
_ANNOTATEIMAGERESPONSE.fields_by_name['item_annotations'].message_type = _ITEMANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['category_annotations'].message_type = _CATEGORYANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['color_annotations'].message_type = _COLORANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['is_fashion_annotation'].message_type = _ISFASHIONANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['has_face_annotation'].message_type = _HASFACEANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['texture_annotations'].message_type = _TEXTUREANNOTATION
_ANNOTATEIMAGERESPONSE.fields_by_name['error'].message_type = _STATUS
_ITEMANNOTATION.fields_by_name['bbox'].message_type = _BOUNDINGBOX
_BATCHANNOTATETEXTSREQUEST.fields_by_name['requests'].message_type = _ANNOTATETEXTREQUEST
_ANNOTATETEXTREQUEST.fields_by_name['features'].message_type = _TEXTFEATURE
_TEXTFEATURE.fields_by_name['type'].enum_type = _TEXTFEATURE_TYPE
_TEXTFEATURE_TYPE.containing_type = _TEXTFEATURE
_BATCHANNOTATETEXTSRESPONSE.fields_by_name['responses'].message_type = _ANNOTATETEXTRESPONSE
_ANNOTATETEXTRESPONSE.fields_by_name['entity_annotations'].message_type = _ENTITYANNOTATION
_ANNOTATETEXTRESPONSE.fields_by_name['price_range_annotation'].message_type = _PRICERANGEANNOTATION
_ANNOTATETEXTRESPONSE.fields_by_name['error'].message_type = _STATUS
_ENTITYANNOTATION.fields_by_name['relations'].message_type = _ENTITYRELATION
_PRICERANGEANNOTATION.fields_by_name['range_annotations'].message_type = _RANGEANNOTATION
_RANGEANNOTATION.fields_by_name['operator'].enum_type = _RANGEANNOTATION_RANGEOPERATOR
_RANGEANNOTATION_RANGEOPERATOR.containing_type = _RANGEANNOTATION
_STATUS.fields_by_name['details'].message_type = google_dot_protobuf_dot_any__pb2._ANY
DESCRIPTOR.message_types_by_name['BatchAnnotateImagesRequest'] = _BATCHANNOTATEIMAGESREQUEST
DESCRIPTOR.message_types_by_name['AnnotateImageRequest'] = _ANNOTATEIMAGEREQUEST
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ImageSource'] = _IMAGESOURCE
DESCRIPTOR.message_types_by_name['ImageFeature'] = _IMAGEFEATURE
DESCRIPTOR.message_types_by_name['BatchAnnotateImagesResponse'] = _BATCHANNOTATEIMAGESRESPONSE
DESCRIPTOR.message_types_by_name['AnnotateImageResponse'] = _ANNOTATEIMAGERESPONSE
DESCRIPTOR.message_types_by_name['ImageFeatureVector'] = _IMAGEFEATUREVECTOR
DESCRIPTOR.message_types_by_name['ItemAnnotation'] = _ITEMANNOTATION
DESCRIPTOR.message_types_by_name['CategoryAnnotation'] = _CATEGORYANNOTATION
DESCRIPTOR.message_types_by_name['ColorAnnotation'] = _COLORANNOTATION
DESCRIPTOR.message_types_by_name['IsFashionAnnotation'] = _ISFASHIONANNOTATION
DESCRIPTOR.message_types_by_name['HasFaceAnnotation'] = _HASFACEANNOTATION
DESCRIPTOR.message_types_by_name['TextureAnnotation'] = _TEXTUREANNOTATION
DESCRIPTOR.message_types_by_name['BoundingBox'] = _BOUNDINGBOX
DESCRIPTOR.message_types_by_name['BatchAnnotateTextsRequest'] = _BATCHANNOTATETEXTSREQUEST
DESCRIPTOR.message_types_by_name['AnnotateTextRequest'] = _ANNOTATETEXTREQUEST
DESCRIPTOR.message_types_by_name['TextFeature'] = _TEXTFEATURE
DESCRIPTOR.message_types_by_name['BatchAnnotateTextsResponse'] = _BATCHANNOTATETEXTSRESPONSE
DESCRIPTOR.message_types_by_name['AnnotateTextResponse'] = _ANNOTATETEXTRESPONSE
DESCRIPTOR.message_types_by_name['EntityAnnotation'] = _ENTITYANNOTATION
DESCRIPTOR.message_types_by_name['PriceRangeAnnotation'] = _PRICERANGEANNOTATION
DESCRIPTOR.message_types_by_name['RangeAnnotation'] = _RANGEANNOTATION
DESCRIPTOR.message_types_by_name['EntityRelation'] = _ENTITYRELATION
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BatchAnnotateImagesRequest = _reflection.GeneratedProtocolMessageType('BatchAnnotateImagesRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATCHANNOTATEIMAGESREQUEST,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.BatchAnnotateImagesRequest)
  ))
_sym_db.RegisterMessage(BatchAnnotateImagesRequest)

AnnotateImageRequest = _reflection.GeneratedProtocolMessageType('AnnotateImageRequest', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATEIMAGEREQUEST,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.AnnotateImageRequest)
  ))
_sym_db.RegisterMessage(AnnotateImageRequest)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.Image)
  ))
_sym_db.RegisterMessage(Image)

ImageSource = _reflection.GeneratedProtocolMessageType('ImageSource', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESOURCE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.ImageSource)
  ))
_sym_db.RegisterMessage(ImageSource)

ImageFeature = _reflection.GeneratedProtocolMessageType('ImageFeature', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEFEATURE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.ImageFeature)
  ))
_sym_db.RegisterMessage(ImageFeature)

BatchAnnotateImagesResponse = _reflection.GeneratedProtocolMessageType('BatchAnnotateImagesResponse', (_message.Message,), dict(
  DESCRIPTOR = _BATCHANNOTATEIMAGESRESPONSE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.BatchAnnotateImagesResponse)
  ))
_sym_db.RegisterMessage(BatchAnnotateImagesResponse)

AnnotateImageResponse = _reflection.GeneratedProtocolMessageType('AnnotateImageResponse', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATEIMAGERESPONSE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.AnnotateImageResponse)
  ))
_sym_db.RegisterMessage(AnnotateImageResponse)

ImageFeatureVector = _reflection.GeneratedProtocolMessageType('ImageFeatureVector', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEFEATUREVECTOR,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.ImageFeatureVector)
  ))
_sym_db.RegisterMessage(ImageFeatureVector)

ItemAnnotation = _reflection.GeneratedProtocolMessageType('ItemAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _ITEMANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.ItemAnnotation)
  ))
_sym_db.RegisterMessage(ItemAnnotation)

CategoryAnnotation = _reflection.GeneratedProtocolMessageType('CategoryAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _CATEGORYANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.CategoryAnnotation)
  ))
_sym_db.RegisterMessage(CategoryAnnotation)

ColorAnnotation = _reflection.GeneratedProtocolMessageType('ColorAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _COLORANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.ColorAnnotation)
  ))
_sym_db.RegisterMessage(ColorAnnotation)

IsFashionAnnotation = _reflection.GeneratedProtocolMessageType('IsFashionAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _ISFASHIONANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.IsFashionAnnotation)
  ))
_sym_db.RegisterMessage(IsFashionAnnotation)

HasFaceAnnotation = _reflection.GeneratedProtocolMessageType('HasFaceAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _HASFACEANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.HasFaceAnnotation)
  ))
_sym_db.RegisterMessage(HasFaceAnnotation)

TextureAnnotation = _reflection.GeneratedProtocolMessageType('TextureAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _TEXTUREANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.TextureAnnotation)
  ))
_sym_db.RegisterMessage(TextureAnnotation)

BoundingBox = _reflection.GeneratedProtocolMessageType('BoundingBox', (_message.Message,), dict(
  DESCRIPTOR = _BOUNDINGBOX,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.BoundingBox)
  ))
_sym_db.RegisterMessage(BoundingBox)

BatchAnnotateTextsRequest = _reflection.GeneratedProtocolMessageType('BatchAnnotateTextsRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATCHANNOTATETEXTSREQUEST,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.BatchAnnotateTextsRequest)
  ))
_sym_db.RegisterMessage(BatchAnnotateTextsRequest)

AnnotateTextRequest = _reflection.GeneratedProtocolMessageType('AnnotateTextRequest', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATETEXTREQUEST,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.AnnotateTextRequest)
  ))
_sym_db.RegisterMessage(AnnotateTextRequest)

TextFeature = _reflection.GeneratedProtocolMessageType('TextFeature', (_message.Message,), dict(
  DESCRIPTOR = _TEXTFEATURE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.TextFeature)
  ))
_sym_db.RegisterMessage(TextFeature)

BatchAnnotateTextsResponse = _reflection.GeneratedProtocolMessageType('BatchAnnotateTextsResponse', (_message.Message,), dict(
  DESCRIPTOR = _BATCHANNOTATETEXTSRESPONSE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.BatchAnnotateTextsResponse)
  ))
_sym_db.RegisterMessage(BatchAnnotateTextsResponse)

AnnotateTextResponse = _reflection.GeneratedProtocolMessageType('AnnotateTextResponse', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATETEXTRESPONSE,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.AnnotateTextResponse)
  ))
_sym_db.RegisterMessage(AnnotateTextResponse)

EntityAnnotation = _reflection.GeneratedProtocolMessageType('EntityAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _ENTITYANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.EntityAnnotation)
  ))
_sym_db.RegisterMessage(EntityAnnotation)

PriceRangeAnnotation = _reflection.GeneratedProtocolMessageType('PriceRangeAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _PRICERANGEANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.PriceRangeAnnotation)
  ))
_sym_db.RegisterMessage(PriceRangeAnnotation)

RangeAnnotation = _reflection.GeneratedProtocolMessageType('RangeAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _RANGEANNOTATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.RangeAnnotation)
  ))
_sym_db.RegisterMessage(RangeAnnotation)

EntityRelation = _reflection.GeneratedProtocolMessageType('EntityRelation', (_message.Message,), dict(
  DESCRIPTOR = _ENTITYRELATION,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.EntityRelation)
  ))
_sym_db.RegisterMessage(EntityRelation)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'annotation_pb2'
  # @@protoc_insertion_point(class_scope:annotation.Status)
  ))
_sym_db.RegisterMessage(Status)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class AnnotatorStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.BatchAnnotateTexts = channel.unary_unary(
          '/annotation.Annotator/BatchAnnotateTexts',
          request_serializer=BatchAnnotateTextsRequest.SerializeToString,
          response_deserializer=BatchAnnotateTextsResponse.FromString,
          )
      self.BatchAnnotateImages = channel.unary_unary(
          '/annotation.Annotator/BatchAnnotateImages',
          request_serializer=BatchAnnotateImagesRequest.SerializeToString,
          response_deserializer=BatchAnnotateImagesResponse.FromString,
          )


  class AnnotatorServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def BatchAnnotateTexts(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def BatchAnnotateImages(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AnnotatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'BatchAnnotateTexts': grpc.unary_unary_rpc_method_handler(
            servicer.BatchAnnotateTexts,
            request_deserializer=BatchAnnotateTextsRequest.FromString,
            response_serializer=BatchAnnotateTextsResponse.SerializeToString,
        ),
        'BatchAnnotateImages': grpc.unary_unary_rpc_method_handler(
            servicer.BatchAnnotateImages,
            request_deserializer=BatchAnnotateImagesRequest.FromString,
            response_serializer=BatchAnnotateImagesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'annotation.Annotator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAnnotatorServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def BatchAnnotateTexts(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def BatchAnnotateImages(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAnnotatorStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def BatchAnnotateTexts(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    BatchAnnotateTexts.future = None
    def BatchAnnotateImages(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    BatchAnnotateImages.future = None


  def beta_create_Annotator_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('annotation.Annotator', 'BatchAnnotateImages'): BatchAnnotateImagesRequest.FromString,
      ('annotation.Annotator', 'BatchAnnotateTexts'): BatchAnnotateTextsRequest.FromString,
    }
    response_serializers = {
      ('annotation.Annotator', 'BatchAnnotateImages'): BatchAnnotateImagesResponse.SerializeToString,
      ('annotation.Annotator', 'BatchAnnotateTexts'): BatchAnnotateTextsResponse.SerializeToString,
    }
    method_implementations = {
      ('annotation.Annotator', 'BatchAnnotateImages'): face_utilities.unary_unary_inline(servicer.BatchAnnotateImages),
      ('annotation.Annotator', 'BatchAnnotateTexts'): face_utilities.unary_unary_inline(servicer.BatchAnnotateTexts),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Annotator_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('annotation.Annotator', 'BatchAnnotateImages'): BatchAnnotateImagesRequest.SerializeToString,
      ('annotation.Annotator', 'BatchAnnotateTexts'): BatchAnnotateTextsRequest.SerializeToString,
    }
    response_deserializers = {
      ('annotation.Annotator', 'BatchAnnotateImages'): BatchAnnotateImagesResponse.FromString,
      ('annotation.Annotator', 'BatchAnnotateTexts'): BatchAnnotateTextsResponse.FromString,
    }
    cardinalities = {
      'BatchAnnotateImages': cardinality.Cardinality.UNARY_UNARY,
      'BatchAnnotateTexts': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'annotation.Annotator', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
