# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import annotation_pb2 as annotation__pb2


class AnnotatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BatchAnnotateTexts = channel.unary_unary(
        '/annotation.Annotator/BatchAnnotateTexts',
        request_serializer=annotation__pb2.BatchAnnotateTextsRequest.SerializeToString,
        response_deserializer=annotation__pb2.BatchAnnotateTextsResponse.FromString,
        )
    self.BatchAnnotateImages = channel.unary_unary(
        '/annotation.Annotator/BatchAnnotateImages',
        request_serializer=annotation__pb2.BatchAnnotateImagesRequest.SerializeToString,
        response_deserializer=annotation__pb2.BatchAnnotateImagesResponse.FromString,
        )


class AnnotatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BatchAnnotateTexts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchAnnotateImages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnnotatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BatchAnnotateTexts': grpc.unary_unary_rpc_method_handler(
          servicer.BatchAnnotateTexts,
          request_deserializer=annotation__pb2.BatchAnnotateTextsRequest.FromString,
          response_serializer=annotation__pb2.BatchAnnotateTextsResponse.SerializeToString,
      ),
      'BatchAnnotateImages': grpc.unary_unary_rpc_method_handler(
          servicer.BatchAnnotateImages,
          request_deserializer=annotation__pb2.BatchAnnotateImagesRequest.FromString,
          response_serializer=annotation__pb2.BatchAnnotateImagesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'annotation.Annotator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
