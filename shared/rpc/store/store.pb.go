// Code generated by protoc-gen-go. DO NOT EDIT.
// source: store.proto

/*
Package store is a generated protocol buffer package.

It is generated from these files:
	store.proto

It has these top-level messages:
	AuthTokens
	CreateRequest
	CreateResponse
	DeleteRequest
	DeleteResponse
	Item
	Variant
	Price
	Location
	Store
	Annotation
	BulkGetItemsByIDRequest
	BulkGetItemsByIDResponse
	BulkUpsertItemsRequest
	BulkUpsertItemsResponse
	BulkDeleteItemsByIDRequest
	BulkDeleteItemsByIDResponse
	ListItemsRequest
	ListItemsForBrandRequest
	GenerateReadTokenRequest
	GenerateReadTokenResponse
*/
package store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthTokens struct {
	ReadTokens []string `protobuf:"bytes,1,rep,name=read_tokens,json=readTokens" json:"read_tokens,omitempty"`
	AdminToken string   `protobuf:"bytes,2,opt,name=admin_token,json=adminToken" json:"admin_token,omitempty"`
}

func (m *AuthTokens) Reset()                    { *m = AuthTokens{} }
func (m *AuthTokens) String() string            { return proto.CompactTextString(m) }
func (*AuthTokens) ProtoMessage()               {}
func (*AuthTokens) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthTokens) GetReadTokens() []string {
	if m != nil {
		return m.ReadTokens
	}
	return nil
}

func (m *AuthTokens) GetAdminToken() string {
	if m != nil {
		return m.AdminToken
	}
	return ""
}

type CreateRequest struct {
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

type CreateResponse struct {
	Tokens *AuthTokens `protobuf:"bytes,1,opt,name=tokens" json:"tokens,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetTokens() *AuthTokens {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type DeleteRequest struct {
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Item struct {
	Id            string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt     uint64        `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	VendorId      string        `protobuf:"bytes,3,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Name          string        `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Brand         string        `protobuf:"bytes,5,opt,name=brand" json:"brand,omitempty"`
	BrandId       string        `protobuf:"bytes,6,opt,name=brand_id,json=brandId" json:"brand_id,omitempty"`
	Url           string        `protobuf:"bytes,7,opt,name=url" json:"url,omitempty"`
	Gender        []string      `protobuf:"bytes,8,rep,name=gender" json:"gender,omitempty"`
	Description   string        `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	ImageUrl      []string      `protobuf:"bytes,10,rep,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Tags          []string      `protobuf:"bytes,11,rep,name=tags" json:"tags,omitempty"`
	Price         *Price        `protobuf:"bytes,12,opt,name=price" json:"price,omitempty"`
	OriginalPrice *Price        `protobuf:"bytes,13,opt,name=original_price,json=originalPrice" json:"original_price,omitempty"`
	Stores        []*Store      `protobuf:"bytes,14,rep,name=stores" json:"stores,omitempty"`
	Variants      []*Variant    `protobuf:"bytes,15,rep,name=variants" json:"variants,omitempty"`
	Annotations   []*Annotation `protobuf:"bytes,16,rep,name=annotations" json:"annotations,omitempty"`
	ShareUrl      string        `protobuf:"bytes,17,opt,name=share_url,json=shareUrl" json:"share_url,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Item) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Item) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Item) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Item) GetBrandId() string {
	if m != nil {
		return m.BrandId
	}
	return ""
}

func (m *Item) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Item) GetGender() []string {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *Item) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Item) GetImageUrl() []string {
	if m != nil {
		return m.ImageUrl
	}
	return nil
}

func (m *Item) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Item) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Item) GetOriginalPrice() *Price {
	if m != nil {
		return m.OriginalPrice
	}
	return nil
}

func (m *Item) GetStores() []*Store {
	if m != nil {
		return m.Stores
	}
	return nil
}

func (m *Item) GetVariants() []*Variant {
	if m != nil {
		return m.Variants
	}
	return nil
}

func (m *Item) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Item) GetShareUrl() string {
	if m != nil {
		return m.ShareUrl
	}
	return ""
}

type Variant struct {
	Id        string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	VendorId  string   `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	VendorSku string   `protobuf:"bytes,3,opt,name=vendor_sku,json=vendorSku" json:"vendor_sku,omitempty"`
	Name      string   `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	ImageUrl  []string `protobuf:"bytes,5,rep,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Available bool     `protobuf:"varint,6,opt,name=available" json:"available,omitempty"`
	Color     string   `protobuf:"bytes,7,opt,name=color" json:"color,omitempty"`
	Size      string   `protobuf:"bytes,8,opt,name=size" json:"size,omitempty"`
}

func (m *Variant) Reset()                    { *m = Variant{} }
func (m *Variant) String() string            { return proto.CompactTextString(m) }
func (*Variant) ProtoMessage()               {}
func (*Variant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Variant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Variant) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *Variant) GetVendorSku() string {
	if m != nil {
		return m.VendorSku
	}
	return ""
}

func (m *Variant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Variant) GetImageUrl() []string {
	if m != nil {
		return m.ImageUrl
	}
	return nil
}

func (m *Variant) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Variant) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Variant) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

type Price struct {
	Eur float32 `protobuf:"fixed32,1,opt,name=eur" json:"eur,omitempty"`
	Gbp float32 `protobuf:"fixed32,2,opt,name=gbp" json:"gbp,omitempty"`
	Usd float32 `protobuf:"fixed32,3,opt,name=usd" json:"usd,omitempty"`
	Dkk float32 `protobuf:"fixed32,4,opt,name=dkk" json:"dkk,omitempty"`
	Sek float32 `protobuf:"fixed32,5,opt,name=sek" json:"sek,omitempty"`
	Inr float32 `protobuf:"fixed32,6,opt,name=inr" json:"inr,omitempty"`
	Aud float32 `protobuf:"fixed32,7,opt,name=aud" json:"aud,omitempty"`
}

func (m *Price) Reset()                    { *m = Price{} }
func (m *Price) String() string            { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()               {}
func (*Price) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Price) GetEur() float32 {
	if m != nil {
		return m.Eur
	}
	return 0
}

func (m *Price) GetGbp() float32 {
	if m != nil {
		return m.Gbp
	}
	return 0
}

func (m *Price) GetUsd() float32 {
	if m != nil {
		return m.Usd
	}
	return 0
}

func (m *Price) GetDkk() float32 {
	if m != nil {
		return m.Dkk
	}
	return 0
}

func (m *Price) GetSek() float32 {
	if m != nil {
		return m.Sek
	}
	return 0
}

func (m *Price) GetInr() float32 {
	if m != nil {
		return m.Inr
	}
	return 0
}

func (m *Price) GetAud() float32 {
	if m != nil {
		return m.Aud
	}
	return 0
}

type Location struct {
	Lat float32 `protobuf:"fixed32,1,opt,name=lat" json:"lat,omitempty"`
	Lon float32 `protobuf:"fixed32,2,opt,name=lon" json:"lon,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Location) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type Store struct {
	Name       string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Country    string    `protobuf:"bytes,2,opt,name=country" json:"country,omitempty"`
	City       string    `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	PostalCode string    `protobuf:"bytes,4,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Location   *Location `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	Address    string    `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *Store) Reset()                    { *m = Store{} }
func (m *Store) String() string            { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()               {}
func (*Store) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Store) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Store) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Store) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Store) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Store) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Store) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Annotation struct {
	Kind   string   `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *Annotation) Reset()                    { *m = Annotation{} }
func (m *Annotation) String() string            { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()               {}
func (*Annotation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Annotation) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Annotation) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type BulkGetItemsByIDRequest struct {
	StoreId string   `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	Ids     []string `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
}

func (m *BulkGetItemsByIDRequest) Reset()                    { *m = BulkGetItemsByIDRequest{} }
func (m *BulkGetItemsByIDRequest) String() string            { return proto.CompactTextString(m) }
func (*BulkGetItemsByIDRequest) ProtoMessage()               {}
func (*BulkGetItemsByIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BulkGetItemsByIDRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

func (m *BulkGetItemsByIDRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type BulkGetItemsByIDResponse struct {
	Items []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *BulkGetItemsByIDResponse) Reset()                    { *m = BulkGetItemsByIDResponse{} }
func (m *BulkGetItemsByIDResponse) String() string            { return proto.CompactTextString(m) }
func (*BulkGetItemsByIDResponse) ProtoMessage()               {}
func (*BulkGetItemsByIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *BulkGetItemsByIDResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type BulkUpsertItemsRequest struct {
	StoreId string  `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	Items   []*Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *BulkUpsertItemsRequest) Reset()                    { *m = BulkUpsertItemsRequest{} }
func (m *BulkUpsertItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*BulkUpsertItemsRequest) ProtoMessage()               {}
func (*BulkUpsertItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *BulkUpsertItemsRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

func (m *BulkUpsertItemsRequest) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type BulkUpsertItemsResponse struct {
}

func (m *BulkUpsertItemsResponse) Reset()                    { *m = BulkUpsertItemsResponse{} }
func (m *BulkUpsertItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*BulkUpsertItemsResponse) ProtoMessage()               {}
func (*BulkUpsertItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type BulkDeleteItemsByIDRequest struct {
	StoreId string   `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	Ids     []string `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
}

func (m *BulkDeleteItemsByIDRequest) Reset()                    { *m = BulkDeleteItemsByIDRequest{} }
func (m *BulkDeleteItemsByIDRequest) String() string            { return proto.CompactTextString(m) }
func (*BulkDeleteItemsByIDRequest) ProtoMessage()               {}
func (*BulkDeleteItemsByIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *BulkDeleteItemsByIDRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

func (m *BulkDeleteItemsByIDRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type BulkDeleteItemsByIDResponse struct {
}

func (m *BulkDeleteItemsByIDResponse) Reset()                    { *m = BulkDeleteItemsByIDResponse{} }
func (m *BulkDeleteItemsByIDResponse) String() string            { return proto.CompactTextString(m) }
func (*BulkDeleteItemsByIDResponse) ProtoMessage()               {}
func (*BulkDeleteItemsByIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type ListItemsRequest struct {
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
}

func (m *ListItemsRequest) Reset()                    { *m = ListItemsRequest{} }
func (m *ListItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListItemsRequest) ProtoMessage()               {}
func (*ListItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ListItemsRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

type ListItemsForBrandRequest struct {
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
	Brand   string `protobuf:"bytes,2,opt,name=brand" json:"brand,omitempty"`
}

func (m *ListItemsForBrandRequest) Reset()                    { *m = ListItemsForBrandRequest{} }
func (m *ListItemsForBrandRequest) String() string            { return proto.CompactTextString(m) }
func (*ListItemsForBrandRequest) ProtoMessage()               {}
func (*ListItemsForBrandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ListItemsForBrandRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

func (m *ListItemsForBrandRequest) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

type GenerateReadTokenRequest struct {
	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId" json:"store_id,omitempty"`
}

func (m *GenerateReadTokenRequest) Reset()                    { *m = GenerateReadTokenRequest{} }
func (m *GenerateReadTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*GenerateReadTokenRequest) ProtoMessage()               {}
func (*GenerateReadTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GenerateReadTokenRequest) GetStoreId() string {
	if m != nil {
		return m.StoreId
	}
	return ""
}

type GenerateReadTokenResponse struct {
	ReadToken string `protobuf:"bytes,1,opt,name=read_token,json=readToken" json:"read_token,omitempty"`
}

func (m *GenerateReadTokenResponse) Reset()                    { *m = GenerateReadTokenResponse{} }
func (m *GenerateReadTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*GenerateReadTokenResponse) ProtoMessage()               {}
func (*GenerateReadTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GenerateReadTokenResponse) GetReadToken() string {
	if m != nil {
		return m.ReadToken
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthTokens)(nil), "store.AuthTokens")
	proto.RegisterType((*CreateRequest)(nil), "store.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "store.CreateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "store.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "store.DeleteResponse")
	proto.RegisterType((*Item)(nil), "store.Item")
	proto.RegisterType((*Variant)(nil), "store.Variant")
	proto.RegisterType((*Price)(nil), "store.Price")
	proto.RegisterType((*Location)(nil), "store.Location")
	proto.RegisterType((*Store)(nil), "store.Store")
	proto.RegisterType((*Annotation)(nil), "store.Annotation")
	proto.RegisterType((*BulkGetItemsByIDRequest)(nil), "store.BulkGetItemsByIDRequest")
	proto.RegisterType((*BulkGetItemsByIDResponse)(nil), "store.BulkGetItemsByIDResponse")
	proto.RegisterType((*BulkUpsertItemsRequest)(nil), "store.BulkUpsertItemsRequest")
	proto.RegisterType((*BulkUpsertItemsResponse)(nil), "store.BulkUpsertItemsResponse")
	proto.RegisterType((*BulkDeleteItemsByIDRequest)(nil), "store.BulkDeleteItemsByIDRequest")
	proto.RegisterType((*BulkDeleteItemsByIDResponse)(nil), "store.BulkDeleteItemsByIDResponse")
	proto.RegisterType((*ListItemsRequest)(nil), "store.ListItemsRequest")
	proto.RegisterType((*ListItemsForBrandRequest)(nil), "store.ListItemsForBrandRequest")
	proto.RegisterType((*GenerateReadTokenRequest)(nil), "store.GenerateReadTokenRequest")
	proto.RegisterType((*GenerateReadTokenResponse)(nil), "store.GenerateReadTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProductStore service

type ProductStoreClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	BulkGetItemsByID(ctx context.Context, in *BulkGetItemsByIDRequest, opts ...grpc.CallOption) (*BulkGetItemsByIDResponse, error)
	BulkUpsertItems(ctx context.Context, in *BulkUpsertItemsRequest, opts ...grpc.CallOption) (*BulkUpsertItemsResponse, error)
	BulkDeleteItemsByID(ctx context.Context, in *BulkDeleteItemsByIDRequest, opts ...grpc.CallOption) (*BulkDeleteItemsByIDResponse, error)
	ListItems(ctx context.Context, in *ListItemsRequest, opts ...grpc.CallOption) (ProductStore_ListItemsClient, error)
	ListItemsForBrand(ctx context.Context, in *ListItemsForBrandRequest, opts ...grpc.CallOption) (ProductStore_ListItemsForBrandClient, error)
	GenerateReadToken(ctx context.Context, in *GenerateReadTokenRequest, opts ...grpc.CallOption) (*GenerateReadTokenResponse, error)
}

type productStoreClient struct {
	cc *grpc.ClientConn
}

func NewProductStoreClient(cc *grpc.ClientConn) ProductStoreClient {
	return &productStoreClient{cc}
}

func (c *productStoreClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStoreClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStoreClient) BulkGetItemsByID(ctx context.Context, in *BulkGetItemsByIDRequest, opts ...grpc.CallOption) (*BulkGetItemsByIDResponse, error) {
	out := new(BulkGetItemsByIDResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/BulkGetItemsByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStoreClient) BulkUpsertItems(ctx context.Context, in *BulkUpsertItemsRequest, opts ...grpc.CallOption) (*BulkUpsertItemsResponse, error) {
	out := new(BulkUpsertItemsResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/BulkUpsertItems", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStoreClient) BulkDeleteItemsByID(ctx context.Context, in *BulkDeleteItemsByIDRequest, opts ...grpc.CallOption) (*BulkDeleteItemsByIDResponse, error) {
	out := new(BulkDeleteItemsByIDResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/BulkDeleteItemsByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productStoreClient) ListItems(ctx context.Context, in *ListItemsRequest, opts ...grpc.CallOption) (ProductStore_ListItemsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProductStore_serviceDesc.Streams[0], c.cc, "/store.ProductStore/ListItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &productStoreListItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProductStore_ListItemsClient interface {
	Recv() (*Item, error)
	grpc.ClientStream
}

type productStoreListItemsClient struct {
	grpc.ClientStream
}

func (x *productStoreListItemsClient) Recv() (*Item, error) {
	m := new(Item)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *productStoreClient) ListItemsForBrand(ctx context.Context, in *ListItemsForBrandRequest, opts ...grpc.CallOption) (ProductStore_ListItemsForBrandClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProductStore_serviceDesc.Streams[1], c.cc, "/store.ProductStore/ListItemsForBrand", opts...)
	if err != nil {
		return nil, err
	}
	x := &productStoreListItemsForBrandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProductStore_ListItemsForBrandClient interface {
	Recv() (*Item, error)
	grpc.ClientStream
}

type productStoreListItemsForBrandClient struct {
	grpc.ClientStream
}

func (x *productStoreListItemsForBrandClient) Recv() (*Item, error) {
	m := new(Item)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *productStoreClient) GenerateReadToken(ctx context.Context, in *GenerateReadTokenRequest, opts ...grpc.CallOption) (*GenerateReadTokenResponse, error) {
	out := new(GenerateReadTokenResponse)
	err := grpc.Invoke(ctx, "/store.ProductStore/GenerateReadToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProductStore service

type ProductStoreServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	BulkGetItemsByID(context.Context, *BulkGetItemsByIDRequest) (*BulkGetItemsByIDResponse, error)
	BulkUpsertItems(context.Context, *BulkUpsertItemsRequest) (*BulkUpsertItemsResponse, error)
	BulkDeleteItemsByID(context.Context, *BulkDeleteItemsByIDRequest) (*BulkDeleteItemsByIDResponse, error)
	ListItems(*ListItemsRequest, ProductStore_ListItemsServer) error
	ListItemsForBrand(*ListItemsForBrandRequest, ProductStore_ListItemsForBrandServer) error
	GenerateReadToken(context.Context, *GenerateReadTokenRequest) (*GenerateReadTokenResponse, error)
}

func RegisterProductStoreServer(s *grpc.Server, srv ProductStoreServer) {
	s.RegisterService(&_ProductStore_serviceDesc, srv)
}

func _ProductStore_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStore_BulkGetItemsByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkGetItemsByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).BulkGetItemsByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/BulkGetItemsByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).BulkGetItemsByID(ctx, req.(*BulkGetItemsByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStore_BulkUpsertItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpsertItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).BulkUpsertItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/BulkUpsertItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).BulkUpsertItems(ctx, req.(*BulkUpsertItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStore_BulkDeleteItemsByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkDeleteItemsByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).BulkDeleteItemsByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/BulkDeleteItemsByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).BulkDeleteItemsByID(ctx, req.(*BulkDeleteItemsByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductStore_ListItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListItemsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProductStoreServer).ListItems(m, &productStoreListItemsServer{stream})
}

type ProductStore_ListItemsServer interface {
	Send(*Item) error
	grpc.ServerStream
}

type productStoreListItemsServer struct {
	grpc.ServerStream
}

func (x *productStoreListItemsServer) Send(m *Item) error {
	return x.ServerStream.SendMsg(m)
}

func _ProductStore_ListItemsForBrand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListItemsForBrandRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProductStoreServer).ListItemsForBrand(m, &productStoreListItemsForBrandServer{stream})
}

type ProductStore_ListItemsForBrandServer interface {
	Send(*Item) error
	grpc.ServerStream
}

type productStoreListItemsForBrandServer struct {
	grpc.ServerStream
}

func (x *productStoreListItemsForBrandServer) Send(m *Item) error {
	return x.ServerStream.SendMsg(m)
}

func _ProductStore_GenerateReadToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateReadTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductStoreServer).GenerateReadToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.ProductStore/GenerateReadToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductStoreServer).GenerateReadToken(ctx, req.(*GenerateReadTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "store.ProductStore",
	HandlerType: (*ProductStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ProductStore_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ProductStore_Delete_Handler,
		},
		{
			MethodName: "BulkGetItemsByID",
			Handler:    _ProductStore_BulkGetItemsByID_Handler,
		},
		{
			MethodName: "BulkUpsertItems",
			Handler:    _ProductStore_BulkUpsertItems_Handler,
		},
		{
			MethodName: "BulkDeleteItemsByID",
			Handler:    _ProductStore_BulkDeleteItemsByID_Handler,
		},
		{
			MethodName: "GenerateReadToken",
			Handler:    _ProductStore_GenerateReadToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListItems",
			Handler:       _ProductStore_ListItems_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListItemsForBrand",
			Handler:       _ProductStore_ListItemsForBrand_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "store.proto",
}

func init() { proto.RegisterFile("store.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1007 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0x8e, 0xd7, 0x3f, 0xb1, 0x8f, 0x13, 0xc7, 0x19, 0x4a, 0xbb, 0x71, 0x71, 0xe3, 0xae, 0xb8,
	0x28, 0x45, 0x44, 0x28, 0x51, 0x05, 0x02, 0x71, 0xd1, 0xb4, 0xb4, 0xb2, 0xa8, 0x50, 0xb5, 0x25,
	0x15, 0x57, 0x58, 0x13, 0xcf, 0xc8, 0x5d, 0x79, 0xb3, 0x63, 0x66, 0x66, 0x23, 0x85, 0x7b, 0x1e,
	0x80, 0x47, 0xe1, 0x45, 0x78, 0x09, 0x5e, 0x04, 0x9d, 0x33, 0xb3, 0xeb, 0x7f, 0xb0, 0xc4, 0x8d,
	0x75, 0xe6, 0x9b, 0xef, 0xfc, 0xcc, 0x9c, 0x6f, 0xcf, 0x18, 0xda, 0xc6, 0x2a, 0x2d, 0xcf, 0x66,
	0x5a, 0x59, 0xc5, 0xea, 0xb4, 0x88, 0x7e, 0x04, 0x78, 0x9e, 0xdb, 0x0f, 0x3f, 0xa9, 0xa9, 0xcc,
	0x0c, 0x3b, 0x85, 0xb6, 0x96, 0x5c, 0x8c, 0x2c, 0x2d, 0xc3, 0xca, 0xa0, 0xfa, 0xa4, 0x15, 0x03,
	0x42, 0x73, 0x02, 0x17, 0x37, 0x49, 0xe6, 0x18, 0x61, 0x30, 0xa8, 0x20, 0x81, 0x20, 0x62, 0x44,
	0x4f, 0xe1, 0xf0, 0x85, 0x96, 0xdc, 0xca, 0x58, 0xfe, 0x9a, 0x4b, 0x63, 0xd9, 0x09, 0x34, 0x29,
	0xd3, 0x28, 0x11, 0x61, 0x85, 0xe8, 0xfb, 0xb4, 0x1e, 0x8a, 0xe8, 0x5b, 0xe8, 0x14, 0x5c, 0x33,
	0x53, 0x99, 0x91, 0xec, 0x33, 0x68, 0x94, 0xa9, 0x2b, 0x4f, 0xda, 0xe7, 0xc7, 0x67, 0xae, 0xe4,
	0x79, 0x89, 0xb1, 0x27, 0x60, 0xa2, 0x97, 0x32, 0x95, 0x3b, 0x25, 0xea, 0x42, 0xa7, 0xe0, 0xba,
	0x44, 0xd1, 0x1f, 0x35, 0xa8, 0x0d, 0xad, 0xbc, 0x61, 0x1d, 0x08, 0x4a, 0x7e, 0x90, 0x08, 0xd6,
	0x07, 0x18, 0x53, 0x4d, 0x62, 0xc4, 0x2d, 0x9d, 0xaf, 0x16, 0xb7, 0x3c, 0xf2, 0xdc, 0xb2, 0x87,
	0xd0, 0xba, 0x95, 0x99, 0x50, 0x1a, 0xb3, 0x54, 0xc9, 0xab, 0xe9, 0x80, 0xa1, 0x60, 0x0c, 0x6a,
	0x19, 0xbf, 0x91, 0x61, 0x8d, 0x70, 0xb2, 0xd9, 0x3d, 0xa8, 0x5f, 0x6b, 0x9e, 0x89, 0xb0, 0x4e,
	0xa0, 0x5b, 0x60, 0xad, 0x64, 0x60, 0x94, 0x86, 0xab, 0x95, 0xd6, 0x43, 0xc1, 0xba, 0x50, 0xcd,
	0x75, 0x1a, 0xee, 0x13, 0x8a, 0x26, 0xbb, 0x0f, 0x8d, 0x89, 0xcc, 0x84, 0xd4, 0x61, 0x93, 0xfa,
	0xe1, 0x57, 0x6c, 0x00, 0x6d, 0x21, 0xcd, 0x58, 0x27, 0x33, 0x9b, 0xa8, 0x2c, 0x6c, 0x91, 0xc7,
	0x22, 0x84, 0xd5, 0x26, 0x37, 0x7c, 0x22, 0x47, 0x18, 0x11, 0xc8, 0xb9, 0x49, 0xc0, 0x95, 0x4e,
	0xb1, 0x5a, 0xcb, 0x27, 0x26, 0x6c, 0x13, 0x4e, 0x36, 0x8b, 0xa0, 0x3e, 0xd3, 0xc9, 0x58, 0x86,
	0x07, 0x74, 0xfd, 0x07, 0xfe, 0xfa, 0xdf, 0x22, 0x16, 0xbb, 0x2d, 0x76, 0x01, 0x1d, 0xa5, 0x93,
	0x49, 0x92, 0xf1, 0x74, 0xe4, 0xc8, 0x87, 0x1b, 0xc8, 0x87, 0x05, 0x87, 0x96, 0xec, 0x53, 0x68,
	0xd0, 0xae, 0x09, 0x3b, 0x83, 0xea, 0x02, 0xf9, 0x1d, 0xfe, 0xc6, 0x7e, 0x8f, 0x3d, 0x85, 0xe6,
	0x2d, 0xd7, 0x09, 0xcf, 0xac, 0x09, 0x8f, 0x88, 0xd7, 0xf1, 0xbc, 0xf7, 0x0e, 0x8e, 0xcb, 0x7d,
	0x76, 0x01, 0x6d, 0x9e, 0x65, 0xca, 0x72, 0x3c, 0xa9, 0x09, 0xbb, 0x44, 0x2f, 0xf5, 0x52, 0xee,
	0xc4, 0x8b, 0x2c, 0xbc, 0x10, 0xf3, 0x81, 0x6b, 0x77, 0x21, 0xc7, 0xae, 0x7d, 0x04, 0x5c, 0xe9,
	0x34, 0xfa, 0xab, 0x02, 0xfb, 0x3e, 0xcf, 0x9a, 0x2c, 0x96, 0xfa, 0x1e, 0xac, 0xf4, 0xbd, 0x0f,
	0xe0, 0x37, 0xcd, 0x34, 0xf7, 0xaa, 0xf0, 0xf4, 0x77, 0xd3, 0x7c, 0xa3, 0x2c, 0x96, 0x3a, 0x53,
	0x5f, 0xe9, 0xcc, 0x27, 0xd0, 0xe2, 0xb7, 0x3c, 0x49, 0xf9, 0x75, 0x2a, 0x49, 0x1e, 0xcd, 0x78,
	0x0e, 0xa0, 0xa2, 0xc6, 0x2a, 0x55, 0xda, 0x4b, 0xc4, 0x2d, 0x30, 0x89, 0x49, 0x7e, 0x93, 0x61,
	0xd3, 0x25, 0x41, 0x3b, 0xfa, 0xbd, 0x02, 0x75, 0x77, 0xfd, 0x5d, 0xa8, 0xca, 0x5c, 0xd3, 0x79,
	0x82, 0x18, 0x4d, 0x44, 0x26, 0xd7, 0x33, 0x3a, 0x4a, 0x10, 0xa3, 0x49, 0xc2, 0x33, 0x4e, 0xd4,
	0x41, 0x8c, 0x26, 0x22, 0x62, 0x3a, 0xa5, 0xba, 0x83, 0x18, 0x4d, 0x44, 0x8c, 0x9c, 0x92, 0x96,
	0x83, 0x18, 0x4d, 0x44, 0x92, 0x4c, 0x53, 0x95, 0x41, 0x8c, 0x26, 0x22, 0x3c, 0x17, 0x54, 0x5d,
	0x10, 0xa3, 0x19, 0x9d, 0x41, 0xf3, 0x8d, 0x1a, 0x53, 0x0b, 0x70, 0x37, 0xe5, 0xb6, 0xa8, 0x24,
	0xe5, 0x96, 0x10, 0x95, 0x15, 0x95, 0xa4, 0x2a, 0x8b, 0xfe, 0xac, 0x40, 0x9d, 0x84, 0x51, 0x5e,
	0x5d, 0x65, 0xe1, 0xea, 0x42, 0xd8, 0x1f, 0xab, 0x3c, 0xb3, 0xfa, 0xce, 0x37, 0xa2, 0x58, 0x22,
	0x7b, 0x9c, 0xd8, 0x3b, 0xdf, 0x01, 0xb2, 0x71, 0x60, 0xcd, 0x94, 0xb1, 0x3c, 0x1d, 0x8d, 0x95,
	0x28, 0x7a, 0x00, 0x0e, 0x7a, 0xa1, 0x84, 0x64, 0x9f, 0x43, 0x33, 0xf5, 0xc5, 0xd1, 0xb9, 0xda,
	0xe7, 0x47, 0x5e, 0x44, 0x45, 0xcd, 0x71, 0x49, 0xc0, 0xdc, 0x5c, 0x08, 0x2d, 0x8d, 0x29, 0x3e,
	0x5b, 0xbf, 0x8c, 0xbe, 0x06, 0x98, 0x8b, 0x0e, 0x2b, 0x99, 0x26, 0x59, 0x21, 0x20, 0xb2, 0xf1,
	0x33, 0xbe, 0xe5, 0x69, 0x2e, 0x4d, 0x18, 0xb8, 0xcf, 0xd8, 0xad, 0xa2, 0x57, 0xf0, 0xe0, 0x32,
	0x4f, 0xa7, 0xaf, 0xa5, 0xc5, 0x81, 0x64, 0x2e, 0xef, 0x86, 0x2f, 0xff, 0x7b, 0xa4, 0xd1, 0xbd,
	0x8b, 0x22, 0x14, 0x9a, 0xd1, 0x77, 0x10, 0xae, 0xc7, 0xf1, 0x73, 0xf5, 0x31, 0xd4, 0x13, 0x04,
	0x69, 0xa2, 0xb7, 0xcf, 0xdb, 0xfe, 0x84, 0x48, 0x8c, 0xdd, 0x4e, 0xf4, 0x1e, 0xee, 0xa3, 0xfb,
	0xd5, 0xcc, 0x48, 0xed, 0x22, 0xec, 0x50, 0x45, 0x19, 0x37, 0xd8, 0x1a, 0xf7, 0xc4, 0x1d, 0x6f,
	0x29, 0xae, 0x1f, 0xc2, 0x43, 0xe8, 0xe1, 0x96, 0x1b, 0xcd, 0xff, 0xef, 0xf0, 0x7d, 0x78, 0xb8,
	0x31, 0x94, 0xcf, 0xf4, 0x05, 0x74, 0xdf, 0x24, 0x66, 0xd7, 0x63, 0x45, 0x3f, 0x40, 0x58, 0xd2,
	0x5f, 0x29, 0x7d, 0x89, 0xa3, 0x79, 0x87, 0xb2, 0xca, 0x59, 0x1f, 0x2c, 0xcc, 0xfa, 0xe8, 0x19,
	0x84, 0xaf, 0x65, 0x26, 0x35, 0xbd, 0x73, 0xfe, 0x21, 0xdd, 0xa1, 0x86, 0x6f, 0xe0, 0x64, 0x83,
	0x9b, 0xef, 0x67, 0x1f, 0x60, 0xfe, 0x4e, 0x7b, 0xcf, 0x56, 0xf9, 0x4c, 0x9f, 0xff, 0x5d, 0x83,
	0x83, 0xb7, 0x5a, 0x89, 0x7c, 0x6c, 0xdd, 0x77, 0xf4, 0x15, 0x34, 0xdc, 0x4b, 0xcb, 0xee, 0xf9,
	0x16, 0x2d, 0x3d, 0xd2, 0xbd, 0x8f, 0x57, 0x50, 0x7f, 0x6d, 0x7b, 0xe8, 0xe8, 0xee, 0xb4, 0x74,
	0x5c, 0x7a, 0x74, 0x4b, 0xc7, 0x95, 0xe7, 0x75, 0x8f, 0x5d, 0x41, 0x77, 0x55, 0x8d, 0xec, 0x91,
	0x27, 0x6f, 0x91, 0x7b, 0xef, 0x74, 0xeb, 0x7e, 0x19, 0x36, 0x86, 0xa3, 0x15, 0x35, 0xb1, 0xfe,
	0x82, 0xd7, 0xba, 0x7a, 0x7b, 0x8f, 0xb6, 0x6d, 0x97, 0x31, 0x7f, 0x81, 0x8f, 0x36, 0x68, 0x87,
	0x3d, 0x5e, 0x70, 0xdc, 0x2c, 0xd1, 0x5e, 0xf4, 0x6f, 0x94, 0x32, 0xfe, 0x33, 0x68, 0x95, 0x6a,
	0x62, 0x0f, 0x8a, 0xe1, 0xb2, 0x22, 0xc7, 0xde, 0xe2, 0xb7, 0x13, 0xed, 0x7d, 0x59, 0x61, 0xdf,
	0xc3, 0xf1, 0x9a, 0x08, 0xd9, 0xe9, 0xaa, 0xfb, 0x8a, 0x3c, 0xd7, 0xc3, 0xfc, 0x0c, 0xc7, 0x6b,
	0x3a, 0x2a, 0xc3, 0x6c, 0x13, 0x66, 0x6f, 0xb0, 0x9d, 0x50, 0x9c, 0xeb, 0xba, 0x41, 0x7f, 0x24,
	0x2f, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xca, 0x9a, 0x47, 0xe0, 0x57, 0x0a, 0x00, 0x00,
}
